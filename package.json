{
  "name": "paste-replaced",
  "displayName": "Paste Replaced",
  "description": "Paste text replaced using regular expressions that you configure, optionally simulating that you are typing it. Works anywhere in VS Code, not just the editors. E.g. ood for fast typing canned text in your presentations and a lot of other cases.",
  "version": "1.1.8",
  "publisher": "betterthantomorrow",
  "author": {
    "name": "Peter Strömberg",
    "email": "pez@pezius.com"
  },
  "icon": "assets/paste-replaced-icon-128x128.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/PEZ/paste-replaced.git"
  },
  "engines": {
    "vscode": "^1.67.2"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Presentation",
    "Clipboard",
    "Paste",
    "Regex",
    "Fast Typing",
    "Canned",
    "Replace",
    "Substitute"
  ],
  "activationEvents": [
    "onCommand:paste-replaced.paste",
    "onCommand:paste-replaced.pasteSelectionReplaced"
  ],
  "main": "extension.js",
  "contributes": {
    "commands": [
      {
        "command": "paste-replaced.paste",
        "category": "Paste Replaced",
        "title": "Paste..."
      },
      {
        "command": "paste-replaced.pasteSelectionReplaced",
        "category": "Paste Replaced",
        "title": "Copy Selected Text and Paste Replaced..."
      },
      {
        "command": "paste-replaced.interruptTyping",
        "category": "Paste Replaced",
        "title": "Interrupt ongoing typing",
        "enablement": "paste-replaced.isTyping"
      }
    ],
    "keybindings": [
      {
        "command": "paste-replaced.paste",
        "key": "ctrl+alt+v space"
      },
      {
        "command": "paste-replaced.interruptTyping",
        "key": "ctrl+alt+v escape",
        "when": "paste-replaced.isTyping"
      }
    ],
    "configuration": [
      {
        "type": "object",
        "title": "Paste Replaced",
        "properties": {
          "paste-replaced.replacers": {
            "type": "array",
            "markdownDescription": "An array of replacers. Each replacer is an object with the following properties:\n\n* `name`: A name for the replacer\n* `replacements`: The replacements to be performed before pasting\n* `simulateTypingSpeed`: Simulated typing speed, if any\n\nThe name of each replacer will be used in the menu that is shown when you invoke the command `Paste Replaced...`.",
            "items": {
              "type": "object",
              "markdownDescription": "A replacer has a `name` and a `replacements` array. The `name` is used to identify the replacer in the UI.",
              "properties": {
                "name": {
                  "type": "string",
                  "markdownDescription": "The name of the replacer. This is only used for display purposes in the UI."
                },
                "replacements": {
                  "type": [
                    "array",
                    "string"
                  ],
                  "markdownDescription": "An array of `[search, replace, flags?]` tuples. These will be applied to the text in the order they are configured. Or a string, which will simply paste the string.",
                  "items": {
                    "type": "array",
                    "markdownDescription": "A `[search, replace, flags?]` tuple where `search` is a string that compiles to a JS regex pattern, `replace` is a string that compiles to a regex replace pattern, and `flags?` is an optional string of regex flags. Only the first occurrence of `search` will be replaced by `replace`, unless the `g` flag is provided.",
                    "minItems": 2,
                    "maxItems": 3
                  }
                },
                "simulateTypingSpeed": {
                  "type": "string",
                  "markdownDescription": "Should the text be inserted simulating that it is being ”typed” in? If so, how fast should the typing be?",
                  "enum": [
                    "instant",
                    "fast",
                    "intermediate",
                    "slow"
                  ],
                  "enumDescriptions": [
                    "Don't simulate typing, just paste it all",
                    "Pour the text in fast",
                    "Type the text neither fast, nor slow",
                    "Slowly type the text in"
                  ],
                  "default": "instant"
                },
                "skipPaste": {
                  "type": "boolean",
                  "markdownDescription": "Should we skip pasting the resulting text? It will only be copied to the clipboard.",
                  "default": false
                }
              },
              "required": [
                "name",
                "replacements"
              ]
            }
          },
          "paste-replaced.simulateTypingSpeed": {
            "type": "string",
            "markdownDescription": "Should the text be inserted simulating that it is being ”typed” in? If so, how fast should the typing be?",
            "enum": [
              "instant",
              "fast",
              "intermediate",
              "slow"
            ],
            "enumDescriptions": [
              "Don't simulate typing, just paste it all",
              "Pour the text in fast",
              "Type the text neither fast, nor slow",
              "Slowly type the text in"
            ],
            "default": "instant"
          },
          "paste-replaced.skipPaste": {
            "type": "boolean",
            "markdownDescription": "Should we skip pasting the resulting text? It will only be copied to the clipboard.",
            "default": false
          }
        }
      }
    ]
  },
  "scripts": {
    "clean": "rimraf .cpcache .shadow-cljs/ out/",
    "watch": "npx shadow-cljs -d cider/cider-nrepl:0.27.4 watch :extension",
    "prewatch": "npm run clean",
    "compile": "npx shadow-cljs compile :extension",
    "release": "npx shadow-cljs release :extension",
    "package": "npx vsce package --allow-star-activation",
    "vscode:prepublish": "npm run clean && npm run release"
  },
  "dependencies": {
    "@vscode/codicons": "^0.0.30",
    "open": "^8.4.0"
  },
  "devDependencies": {
    "rimraf": "^3.0.2",
    "shadow-cljs": "^2.18.0",
    "vsce": "^2.7.0"
  }
}
